<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'githubId', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'login', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'avatarUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'gravatarUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'url', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'htmlUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'followersUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'followingUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'starredUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'subscriptionsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organizationsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'reposUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'eventsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'receivedEventsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'type', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'siteAdmin', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'commits'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'githubId', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'login', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'avatarUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'gravatarUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'url', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'htmlUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'followersUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'followingUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'starredUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'subscriptionsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'organizationsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'reposUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'eventsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'receivedEventsUrl', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'type', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'siteAdmin', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'commits'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGithubId($githubId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGithubId', [$githubId]);

        return parent::setGithubId($githubId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGithubId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGithubId', []);

        return parent::getGithubId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin($login)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', [$login]);

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarUrl($avatarUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarUrl', [$avatarUrl]);

        return parent::setAvatarUrl($avatarUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUrl', []);

        return parent::getAvatarUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setGravatarUrl($gravatarUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGravatarUrl', [$gravatarUrl]);

        return parent::setGravatarUrl($gravatarUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getGravatarUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGravatarUrl', []);

        return parent::getGravatarUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setHtmlUrl($htmlUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHtmlUrl', [$htmlUrl]);

        return parent::setHtmlUrl($htmlUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getHtmlUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHtmlUrl', []);

        return parent::getHtmlUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setFollowersUrl($followersUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFollowersUrl', [$followersUrl]);

        return parent::setFollowersUrl($followersUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getFollowersUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFollowersUrl', []);

        return parent::getFollowersUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setFollowingUrl($followingUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFollowingUrl', [$followingUrl]);

        return parent::setFollowingUrl($followingUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getFollowingUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFollowingUrl', []);

        return parent::getFollowingUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarredUrl($starredUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarredUrl', [$starredUrl]);

        return parent::setStarredUrl($starredUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarredUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarredUrl', []);

        return parent::getStarredUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionsUrl($subscriptionsUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionsUrl', [$subscriptionsUrl]);

        return parent::setSubscriptionsUrl($subscriptionsUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionsUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionsUrl', []);

        return parent::getSubscriptionsUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationsUrl($organizationsUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationsUrl', [$organizationsUrl]);

        return parent::setOrganizationsUrl($organizationsUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationsUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationsUrl', []);

        return parent::getOrganizationsUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setReposUrl($reposUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReposUrl', [$reposUrl]);

        return parent::setReposUrl($reposUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getReposUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReposUrl', []);

        return parent::getReposUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventsUrl($eventsUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventsUrl', [$eventsUrl]);

        return parent::setEventsUrl($eventsUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventsUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventsUrl', []);

        return parent::getEventsUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setReceivedEventsUrl($receivedEventsUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReceivedEventsUrl', [$receivedEventsUrl]);

        return parent::setReceivedEventsUrl($receivedEventsUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getReceivedEventsUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReceivedEventsUrl', []);

        return parent::getReceivedEventsUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSiteAdmin($siteAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSiteAdmin', [$siteAdmin]);

        return parent::setSiteAdmin($siteAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getSiteAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiteAdmin', []);

        return parent::getSiteAdmin();
    }

}
