<?php

namespace AppBundle\Manager;

use AppBundle\Entity\Repository;
use Doctrine\ORM\EntityManagerInterface;

/**
 * RepositoryManager
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RepositoryManager
{
    private $em;
    private $repositoryRepository;

    public function __construct( EntityManagerInterface $em )
    {
        $this->em = $em;
        $this->repositoryRepository = $this->em->getRepository('AppBundle:Repository');
    }

    public function getRepositoryFromPayload( $payloadRepository )
    {
        if( null === $repository = $this->repositoryRepository->findOneByGithubId($payloadRepository->id)) {
            $repository = new Repository();

            $repository
                ->setUrl($payloadRepository->url)
                ->setSize($payloadRepository->size)
                ->setFork($payloadRepository->fork)
                ->setName($payloadRepository->name)
                ->setGithubId($payloadRepository->id)
                ->setGitUrl($payloadRepository->git_url)
                ->setSshUrl($payloadRepository->ssh_url)
                ->setPrivate($payloadRepository->private)
                ->setHtmlUrl($payloadRepository->html_url)
                ->setOwner($payloadRepository->owner->name)
                ->setCloneUrl($payloadRepository->clone_url)
                ->setLanguage($payloadRepository->language)
                ->setFullName($payloadRepository->full_name)
                ->setPushedAt($payloadRepository->pushed_at)
                ->setDescription($payloadRepository->description)
                ->setOrganization($payloadRepository->organization)
                ->setMasterBranch($payloadRepository->master_branch)
                ->setDefaultBranch($payloadRepository->default_branch);

            $this->em->persist($repository);
            $this->em->flush();
        }

        return $repository;
    }

}
